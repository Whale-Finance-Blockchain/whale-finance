{"abi":[{"type":"receive","stateMutability":"payable"},{"type":"function","name":"executeCall","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"payable"},{"type":"function","name":"nonce","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"tokenContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","nonce()":"affed0e0","owner()":"8da5cb5b","token()":"fc0c546a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0x400a0398`\",\"kind\":\"dev\",\"methods\":{\"executeCall(address,uint256,bytes)\":{\"details\":\"Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.\",\"returns\":{\"_0\":\"The result of the call\"}},\"nonce()\":{\"details\":\"Returns a nonce value that is updated on every successful transaction\",\"returns\":{\"_0\":\"The current account nonce\"}},\"owner()\":{\"details\":\"Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.\",\"returns\":{\"_0\":\"Address of the owner of the ERC-721 token which owns the account\"}},\"token()\":{\"details\":\"Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.\",\"returns\":{\"chainId\":\"The EIP-155 ID of the chain the ERC-721 token exists on\",\"tokenContract\":\"The contract address of the ERC-721 token\",\"tokenId\":\"The ID of the ERC-721 token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interface/IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@upgradeable/safeAccount/=lib/openzeppelin-contracts-upgradeable/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interface/IERC6551Account.sol\":{\"keccak256\":\"0x6ff8242276aa7dbd7dac0c9c0ff6324426fbafdf0139896587d56c45dc9b335d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13d5bfdf03ead70f29b342dc631624f069594175864a6172c9e2b9f31d5682ac\",\"dweb:/ipfs/QmWwRVtkuCrWXQUurDUw1YvfRyv78nY1WuP4ov9oUFKJ6b\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"executeCall(address,uint256,bytes)":{"details":"Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.","returns":{"_0":"The result of the call"}},"nonce()":{"details":"Returns a nonce value that is updated on every successful transaction","returns":{"_0":"The current account nonce"}},"owner()":{"details":"Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.","returns":{"_0":"Address of the owner of the ERC-721 token which owns the account"}},"token()":{"details":"Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.","returns":{"chainId":"The EIP-155 ID of the chain the ERC-721 token exists on","tokenContract":"The contract address of the ERC-721 token","tokenId":"The ID of the ERC-721 token"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@upgradeable/=lib/openzeppelin-contracts-upgradeable/","@upgradeable/safeAccount/=lib/openzeppelin-contracts-upgradeable/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interface/IERC6551Account.sol":"IERC6551Account"},"evmVersion":"paris","libraries":{}},"sources":{"src/interface/IERC6551Account.sol":{"keccak256":"0x6ff8242276aa7dbd7dac0c9c0ff6324426fbafdf0139896587d56c45dc9b335d","urls":["bzz-raw://13d5bfdf03ead70f29b342dc631624f069594175864a6172c9e2b9f31d5682ac","dweb:/ipfs/QmWwRVtkuCrWXQUurDUw1YvfRyv78nY1WuP4ov9oUFKJ6b"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/interface/IERC6551Account.sol","id":35261,"exportedSymbols":{"IERC6551Account":[35260]},"nodeType":"SourceUnit","src":"33:2309:65","nodes":[{"id":35220,"nodeType":"PragmaDirective","src":"33:24:65","nodes":[],"literals":["solidity","^","0.8",".13"]},{"id":35260,"nodeType":"ContractDefinition","src":"129:2213:65","nodes":[{"id":35225,"nodeType":"FunctionDefinition","src":"368:27:65","nodes":[],"documentation":{"id":35222,"nodeType":"StructuredDocumentation","src":"162:200:65","text":"@dev Token bound accounts MUST implement a `receive` function.\n Token bound accounts MAY perform arbitrary logic to restrict conditions\n under which Ether can be received."},"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":35223,"nodeType":"ParameterList","parameters":[],"src":"375:2:65"},"returnParameters":{"id":35224,"nodeType":"ParameterList","parameters":[],"src":"394:0:65"},"scope":35260,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":35237,"nodeType":"FunctionDefinition","src":"1111:143:65","nodes":[],"documentation":{"id":35226,"nodeType":"StructuredDocumentation","src":"403:702:65","text":"@dev Executes `call` on address `to`, with value `value` and calldata\n `data`.\n MUST revert and bubble up errors if call fails.\n By default, token bound accounts MUST allow the owner of the ERC-721 token\n which owns the account to execute arbitrary calls using `executeCall`.\n Token bound accounts MAY implement additional authorization mechanisms\n which limit the ability of the ERC-721 token holder to execute calls.\n Token bound accounts MAY implement additional execution functions which\n grant execution permissions to other non-owner accounts.\n @return The result of the call"},"functionSelector":"9e5d4c49","implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"1120:11:65","parameters":{"id":35233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35228,"mutability":"mutable","name":"to","nameLocation":"1150:2:65","nodeType":"VariableDeclaration","scope":35237,"src":"1142:10:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35227,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:65","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35230,"mutability":"mutable","name":"value","nameLocation":"1171:5:65","nodeType":"VariableDeclaration","scope":35237,"src":"1163:13:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35232,"mutability":"mutable","name":"data","nameLocation":"1202:4:65","nodeType":"VariableDeclaration","scope":35237,"src":"1187:19:65","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35231,"name":"bytes","nodeType":"ElementaryTypeName","src":"1187:5:65","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1131:82:65"},"returnParameters":{"id":35236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35237,"src":"1240:12:65","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35234,"name":"bytes","nodeType":"ElementaryTypeName","src":"1240:5:65","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1239:14:65"},"scope":35260,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":35247,"nodeType":"FunctionDefinition","src":"1674:124:65","nodes":[],"documentation":{"id":35238,"nodeType":"StructuredDocumentation","src":"1262:406:65","text":"@dev Returns identifier of the ERC-721 token which owns the\n account\n The return value of this function MUST be constant - it MUST NOT change\n over time.\n @return chainId The EIP-155 ID of the chain the ERC-721 token exists on\n @return tokenContract The contract address of the ERC-721 token\n @return tokenId The ID of the ERC-721 token"},"functionSelector":"fc0c546a","implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"1683:5:65","parameters":{"id":35239,"nodeType":"ParameterList","parameters":[],"src":"1688:2:65"},"returnParameters":{"id":35246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35241,"mutability":"mutable","name":"chainId","nameLocation":"1749:7:65","nodeType":"VariableDeclaration","scope":35247,"src":"1741:15:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35243,"mutability":"mutable","name":"tokenContract","nameLocation":"1766:13:65","nodeType":"VariableDeclaration","scope":35247,"src":"1758:21:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35242,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:65","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35245,"mutability":"mutable","name":"tokenId","nameLocation":"1789:7:65","nodeType":"VariableDeclaration","scope":35247,"src":"1781:15:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1781:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1740:57:65"},"scope":35260,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35253,"nodeType":"FunctionDefinition","src":"2097:49:65","nodes":[],"documentation":{"id":35248,"nodeType":"StructuredDocumentation","src":"1806:285:65","text":"@dev Returns the owner of the ERC-721 token which controls the account\n if the token exists.\n This is value is obtained by calling `ownerOf` on the ERC-721 contract.\n @return Address of the owner of the ERC-721 token which owns the account"},"functionSelector":"8da5cb5b","implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2106:5:65","parameters":{"id":35249,"nodeType":"ParameterList","parameters":[],"src":"2111:2:65"},"returnParameters":{"id":35252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35253,"src":"2137:7:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35250,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:65","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2136:9:65"},"scope":35260,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35259,"nodeType":"FunctionDefinition","src":"2290:49:65","nodes":[],"documentation":{"id":35254,"nodeType":"StructuredDocumentation","src":"2154:130:65","text":"@dev Returns a nonce value that is updated on every successful transaction\n @return The current account nonce"},"functionSelector":"affed0e0","implemented":false,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"2299:5:65","parameters":{"id":35255,"nodeType":"ParameterList","parameters":[],"src":"2304:2:65"},"returnParameters":{"id":35258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35259,"src":"2330:7:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2329:9:65"},"scope":35260,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","documentation":{"id":35221,"nodeType":"StructuredDocumentation","src":"61:68:65","text":"@dev the ERC-165 identifier for this interface is `0x400a0398`"},"fullyImplemented":false,"linearizedBaseContracts":[35260],"name":"IERC6551Account","nameLocation":"139:15:65","scope":35261,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":65}