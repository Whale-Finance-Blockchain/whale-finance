{
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "implementation()": "5c60da1b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xcb809ab9a7b6ecf4dc603d387def93840b36508221c5228c692608c60870e264\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37f02385dc02f7dfb4c2a34ecaacc6e94c30fca5751c64c0b83204455efacc5e\",\"dweb:/ipfs/QmXK6LQxhka3KKzKGxRMRpxGQPW4YomKpxeucifYcCRHWs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "implementation()": {
            "details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": "IBeacon"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xcb809ab9a7b6ecf4dc603d387def93840b36508221c5228c692608c60870e264",
        "urls": [
          "bzz-raw://37f02385dc02f7dfb4c2a34ecaacc6e94c30fca5751c64c0b83204455efacc5e",
          "dweb:/ipfs/QmXK6LQxhka3KKzKGxRMRpxGQPW4YomKpxeucifYcCRHWs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
    "id": 44940,
    "exportedSymbols": {
      "IBeacon": [
        44939
      ]
    },
    "nodeType": "SourceUnit",
    "src": "93:364:32",
    "nodes": [
      {
        "id": 44931,
        "nodeType": "PragmaDirective",
        "src": "93:24:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 44939,
        "nodeType": "ContractDefinition",
        "src": "199:257:32",
        "nodes": [
          {
            "id": 44938,
            "nodeType": "FunctionDefinition",
            "src": "396:58:32",
            "nodes": [],
            "documentation": {
              "id": 44933,
              "nodeType": "StructuredDocumentation",
              "src": "223:168:32",
              "text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
            },
            "functionSelector": "5c60da1b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "405:14:32",
            "parameters": {
              "id": 44934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:2:32"
            },
            "returnParameters": {
              "id": 44937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44938,
                  "src": "445:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:9:32"
            },
            "scope": 44939,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBeacon",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 44932,
          "nodeType": "StructuredDocumentation",
          "src": "119:79:32",
          "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44939
        ],
        "name": "IBeacon",
        "nameLocation": "209:7:32",
        "scope": 44940,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 32
}